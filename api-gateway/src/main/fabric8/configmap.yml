metadata:
  name: ${project.artifactId}
data:
  application.yml: |
    # spring application yaml file
    api:
      ratelimiter:
        redis:
          cluster:
            master:
              host-name: api-gateway-rate-limit-db-redis-master
            slaves:
            - hots-name: api-gateway-rate-limit-db-redis-slave
              port: 6379
    logging:
      level:
        org.springframework.cloud.gateway: TRACE
        org.springframework.http.server.reactive: DEBUG
        org.springframework.web.reactive: DEBUG
        reactor.ipc.netty: DEBUG
    #management:
    #  endpoints:
    #    web:
    #      exposure:
    #        include: "info, health, metrics"
            
    spring:
      cloud:
        gateway:
          globalcors:
            corsConfigurations:
              '[/**]':
                allowedOrigins: "*"
                #allowedOrigins: localhost
                allowedMethods:
                  - POST
                  - GET
                  - OPTIONS
                  - DELETE
                  - PUT
                  - PATCH
                allowedHeaders: 
                  - Origin
                  - Accept
                  - X-Requested-With
                  - Content-Type
                  - Access-Control-Request-Method
                  - Access-Control-Request-Headers
                  - Authorization
                allowCredentials: true
                maxAge: 3600
          #default-filters:
          #  - SecureHeaders
          #  - Hystrix=default
          # http://cloud.spring.io/spring-cloud-gateway/single/spring-cloud-gateway.html#_tls_ssl
          httpclient:
            ssl:
              # Using an insecure trust manager is not suitable for production.
              useInsecureTrustManager: true
              #trustedX509Certificates:
              #  - cert1.pem
              #  - cert2.pem
          routes:
            - id: todos_route
              uri: http://todo-service:8080
              predicates:
                - Path=/todos/**
              filters:
                #- name: RequestRateLimiter
                #  args:
                #    redis-rate-limiter.replenishRate: 10
                #    redis-rate-limiter.burstCapacity: 20
                - RewritePath=/todos/(?<segment>.*), /todos/$\{segment}
            - id: profile_todos_route
              uri: http://todo-service:8080
              predicates:
                - Path=/profile/todos/**
              filters:
                #- name: RequestRateLimiter
                #  args:
                #    redis-rate-limiter.replenishRate: 10
                #    redis-rate-limiter.burstCapacity: 20
                - RewritePath=/profile/todos/(?<segment>.*), /profile/todos/$\{segment}
